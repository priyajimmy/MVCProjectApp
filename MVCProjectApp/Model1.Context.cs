//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCProjectApp
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DbMVCprojectEntities : DbContext
    {
        public DbMVCprojectEntities()
            : base("name=DbMVCprojectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Company_Tab> Company_Tab { get; set; }
        public virtual DbSet<JobApply_Tab> JobApply_Tab { get; set; }
        public virtual DbSet<Jobs_Tab> Jobs_Tab { get; set; }
        public virtual DbSet<Login_Tab> Login_Tab { get; set; }
        public virtual DbSet<User_Tab> User_Tab { get; set; }
    
        public virtual int sp_CompReg(Nullable<int> cid, string cna, string caddr, string cphone, string cweb)
        {
            var cidParameter = cid.HasValue ?
                new ObjectParameter("cid", cid) :
                new ObjectParameter("cid", typeof(int));
    
            var cnaParameter = cna != null ?
                new ObjectParameter("cna", cna) :
                new ObjectParameter("cna", typeof(string));
    
            var caddrParameter = caddr != null ?
                new ObjectParameter("caddr", caddr) :
                new ObjectParameter("caddr", typeof(string));
    
            var cphoneParameter = cphone != null ?
                new ObjectParameter("cphone", cphone) :
                new ObjectParameter("cphone", typeof(string));
    
            var cwebParameter = cweb != null ?
                new ObjectParameter("cweb", cweb) :
                new ObjectParameter("cweb", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CompReg", cidParameter, cnaParameter, caddrParameter, cphoneParameter, cwebParameter);
        }
    
        public virtual int sp_Login(string una, string pwd, ObjectParameter status)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Login", unaParameter, pwdParameter, status);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_loginId(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_loginId", unaParameter, pwdParameter);
        }
    
        public virtual int sp_loginsert(Nullable<int> rid, string una, string pw, string ltype)
        {
            var ridParameter = rid.HasValue ?
                new ObjectParameter("rid", rid) :
                new ObjectParameter("rid", typeof(int));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            var ltypeParameter = ltype != null ?
                new ObjectParameter("Ltype", ltype) :
                new ObjectParameter("Ltype", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_loginsert", ridParameter, unaParameter, pwParameter, ltypeParameter);
        }
    
        public virtual ObjectResult<string> sp_loginType(string una, string pwd)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("sp_loginType", unaParameter, pwdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_MaxIdLogin()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_MaxIdLogin");
        }
    
        public virtual ObjectResult<sp_userprofile_Result> sp_userprofile(Nullable<int> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_userprofile_Result>("sp_userprofile", uidParameter);
        }
    
        public virtual int sp_userReg(Nullable<int> uid, string na, Nullable<int> ag, string addr, string ph, string em, string gen, string qual, string exp, string skil)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            var emParameter = em != null ?
                new ObjectParameter("em", em) :
                new ObjectParameter("em", typeof(string));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("Exp", exp) :
                new ObjectParameter("Exp", typeof(string));
    
            var skilParameter = skil != null ?
                new ObjectParameter("skil", skil) :
                new ObjectParameter("skil", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_userReg", uidParameter, naParameter, agParameter, addrParameter, phParameter, emParameter, genParameter, qualParameter, expParameter, skilParameter);
        }
    
        public virtual int sp_jobs(Nullable<int> compid, string jobtitle, string skills, string experience, string jobstatus, string lastdate)
        {
            var compidParameter = compid.HasValue ?
                new ObjectParameter("compid", compid) :
                new ObjectParameter("compid", typeof(int));
    
            var jobtitleParameter = jobtitle != null ?
                new ObjectParameter("jobtitle", jobtitle) :
                new ObjectParameter("jobtitle", typeof(string));
    
            var skillsParameter = skills != null ?
                new ObjectParameter("skills", skills) :
                new ObjectParameter("skills", typeof(string));
    
            var experienceParameter = experience != null ?
                new ObjectParameter("experience", experience) :
                new ObjectParameter("experience", typeof(string));
    
            var jobstatusParameter = jobstatus != null ?
                new ObjectParameter("jobstatus", jobstatus) :
                new ObjectParameter("jobstatus", typeof(string));
    
            var lastdateParameter = lastdate != null ?
                new ObjectParameter("lastdate", lastdate) :
                new ObjectParameter("lastdate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_jobs", compidParameter, jobtitleParameter, skillsParameter, experienceParameter, jobstatusParameter, lastdateParameter);
        }
    
        public virtual ObjectResult<sp_jobsearch_Result> sp_jobsearch(string skl, string exp)
        {
            var sklParameter = skl != null ?
                new ObjectParameter("skl", skl) :
                new ObjectParameter("skl", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jobsearch_Result>("sp_jobsearch", sklParameter, expParameter);
        }
    
        public virtual ObjectResult<sp_jobsearches_Result> sp_jobsearches(string skl, string exp)
        {
            var sklParameter = skl != null ?
                new ObjectParameter("skl", skl) :
                new ObjectParameter("skl", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jobsearches_Result>("sp_jobsearches", sklParameter, expParameter);
        }
    
        public virtual ObjectResult<sp_jobsearchs_Result> sp_jobsearchs(string skl, string exp)
        {
            var sklParameter = skl != null ?
                new ObjectParameter("skl", skl) :
                new ObjectParameter("skl", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jobsearchs_Result>("sp_jobsearchs", sklParameter, expParameter);
        }
    
        public virtual ObjectResult<sp_jobsearchss_Result> sp_jobsearchss(string skl, string exp)
        {
            var sklParameter = skl != null ?
                new ObjectParameter("skl", skl) :
                new ObjectParameter("skl", typeof(string));
    
            var expParameter = exp != null ?
                new ObjectParameter("exp", exp) :
                new ObjectParameter("exp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_jobsearchss_Result>("sp_jobsearchss", sklParameter, expParameter);
        }
    
        public virtual int sp_check(string qry)
        {
            var qryParameter = qry != null ?
                new ObjectParameter("qry", qry) :
                new ObjectParameter("qry", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_check", qryParameter);
        }
    
        public virtual int sp_applycv(Nullable<int> uid, Nullable<int> jid, string cv, string adate, string astat)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(int));
    
            var jidParameter = jid.HasValue ?
                new ObjectParameter("jid", jid) :
                new ObjectParameter("jid", typeof(int));
    
            var cvParameter = cv != null ?
                new ObjectParameter("cv", cv) :
                new ObjectParameter("cv", typeof(string));
    
            var adateParameter = adate != null ?
                new ObjectParameter("adate", adate) :
                new ObjectParameter("adate", typeof(string));
    
            var astatParameter = astat != null ?
                new ObjectParameter("astat", astat) :
                new ObjectParameter("astat", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_applycv", uidParameter, jidParameter, cvParameter, adateParameter, astatParameter);
        }
    }
}
